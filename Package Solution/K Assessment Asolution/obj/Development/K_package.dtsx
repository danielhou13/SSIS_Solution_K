<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/29/2024 2:53:31 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DANIEL-DESKTOP"
  DTS:CreatorName="DANIEL-DESKTOP\danie"
  DTS:DTSID="{3C6880D1-FED9-4A30-8151-CCA23A5C67E1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5397.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="K_package"
  DTS:PackageType="5"
  DTS:VersionBuild="160"
  DTS:VersionGUID="{30B5A7B4-3E49-4171-8E0C-5398349D805C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CSV file connection manager]"
      DTS:CreationName="FLATFILE"
      DTS:Description="KORE CSV file connection"
      DTS:DTSID="{DE2EAD6E-56F5-4C8C-9D06-FF818B7E0F38}"
      DTS:ObjectName="CSV file connection manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::Filename]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\SSIS_Solution_K\data\data.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="UserID"
              DTS:DTSID="{4685B8A4-64E6-469E-8D1D-F39FB2252A07}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FullName"
              DTS:DTSID="{DEAF7AB0-C8B7-410C-BFBC-73F2CB31B611}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Age"
              DTS:DTSID="{6498A2FB-BF67-45C8-A2F3-EC5ECD2E88A4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Email"
              DTS:DTSID="{B7630B0D-0036-43D2-A433-FC0B0BB65663}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RegistrationDate"
              DTS:DTSID="{847A4F20-2C45-44EF-BF1F-A69066274E24}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="LastLoginDate"
              DTS:DTSID="{FDC03D9E-B0C8-4959-9469-F089B0CCC4BF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PurchaseTotal"
              DTS:DTSID="{7032BBDF-ACF6-4694-952B-07785CCF8795}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Error CSV File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:Description="Connection Manager for redirecting error rows"
      DTS:DTSID="{60B6E5C5-4B76-4C38-99E1-F2387F1731AF}"
      DTS:ObjectName="Error CSV File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\SSIS_Solution_K\data\error.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="UserID"
              DTS:DTSID="{2AFC587F-86B2-4CA0-8E0F-3F9565F52055}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FullName"
              DTS:DTSID="{6C523DBE-C914-402E-A203-192057D64829}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Age"
              DTS:DTSID="{C8E5B999-9DD2-473A-8CA1-2AF0688117EB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Email"
              DTS:DTSID="{239BB65E-FBF0-4A0E-BA0A-094496CA0A84}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RegistrationDate"
              DTS:DTSID="{E4D16968-6DCF-4126-BD1F-81096776DF86}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="LastLoginDate"
              DTS:DTSID="{B00BEE8D-05A8-4569-B76B-5971E8332689}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="255"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PurchaseTotal"
              DTS:DTSID="{4477094F-69B2-4F8E-A195-3BA406401E4A}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost Kore Assignmnet DB connection]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{D496B891-9896-453D-8C25-8D9FBA045AFB}"
      DTS:ObjectName="localhost Kore Assignmnet DB connection">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=KoreAssignment_Daniel_Hou;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-K_package-{D496B891-9896-453D-8C25-8D9FBA045AFB}localhost.KoreAssignment_Daniel_Hou;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B761616-9910-4F24-BC27-DDF028ACE583}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorRows">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B614CCD7-DBDB-417F-993A-BC3BA7CDA04F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Filename">
      <DTS:VariableValue
        DTS:DataType="8">C:\SSIS_Solution_K\data\data.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Clean csv file to remove trailing spaces after text qualifier"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{2325AEF7-22A6-437E-8326-8B0CDB9EF18F}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clean csv file to remove trailing spaces after text qualifier"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_6f6b9286f39940d49e63e270e75f7401"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::Filename">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Text.RegularExpressions;
using System.Text;
#endregion

namespace ST_6f6b9286f39940d49e63e270e75f7401
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // https://stackoverflow.com/questions/52010718/remove-extra-spaces-from-data-with-ssis
            // get filepath
            string fpath = Dts.Variables["User::Filename"].Value.ToString();
            //read file contents
            string readContents;
            using (StreamReader sr = new StreamReader(fpath, Encoding.UTF8))
            {
                readContents = sr.ReadToEnd();
                // remove spaces after the text qualifier to prevent bugs
                readContents = Regex.Replace(readContents, "\" ", "\"");
            }
            //write contents to file
            File.WriteAllText(fpath, readContents);
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_6f6b9286f39940d49e63e270e75f7401.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{82928b24-9b4c-46a3-89bc-a6d8ae345fe5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_6f6b9286f39940d49e63e270e75f7401</RootNamespace>
    <AssemblyName>ST_6f6b9286f39940d49e63e270e75f7401</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_6f6b9286f39940d49e63e270e75f7401</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_6f6b9286f39940d49e63e270e75f7401</msb:DisplayName>
    <msb:ProjectId>{0C80F14D-2FB2-43CE-BCD0-90430818157F}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_6f6b9286f39940d49e63e270e75f7401.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6f6b9286f39940d49e63e270e75f7401.Properties.Settings.get_Default():ST_6f6b9286f39940d49e63e270e75f7401.Properties.Sett" +
    "ings")]

namespace ST_6f6b9286f39940d49e63e270e75f7401.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6f6b9286f39940d49e63e270e75f7401")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_6f6b9286f39940d49e63e270e75f7401")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6f6b9286f39940d49e63e270e75f7401.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6f6b9286f39940d49e63e270e75f7401.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6f6b9286f39940d49e63e270e75f7401.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6f6b9286f39940d49e63e270e75f7401.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6f6b9286f39940d49e63e270e75f7401.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_6f6b9286f39940d49e63e270e75f7401.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACVnCmYAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAA2i4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIguAABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA4A4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC8
LgAAAAAAAEgAAAACAAUAOCEAAJgMAAABAAAAAAAAANAtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwBkAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKBigVAAAKcxYAAAoMCG8XAAAKCwdyHwAAcHIlAABwKBgAAAoL3goILAYIbxkAAArc
BgcoGgAACgIoEAAAChZvGwAACioBEAAAAgAsABpGAAoAAAAAHgIoHAAACioeAigdAAAKKq5+AQAA
BC0ecikAAHDQAwAAAigeAAAKbx8AAApzIAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4D
AAAEKh4CKCEAAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAF
AGwAAAAEBAAAI34AAHAEAAD4BQAAI1N0cmluZ3MAAAAAaAoAAJwAAAAjVVMABAsAABAAAAAjR1VJ
RAAAABQLAACEAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAIwAAAAUAAAAG
AAAACQAAAAEAAAAhAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAA
vAMBAAAAAAAGAGMCpAQGAPICpAQGAK8BkQQPABgFAAAGANwBOgQGAEYCOgQGACcCOgQGANkCOgQG
AIMCOgQGAJwCOgQGAPMBOgQGAA4CKQMKALcCawMKACYBawMGAFgENwAGAPQD7QMGAJIBkQQGAKoF
7QMGAHQExAQGAEwEJQQOAGIBpgMOAMMBpgMOAEIBEAQGAHcBpAQKAJQDawMSAFoF0QASAJMA0QAG
ACADzAUGAGUENwAOAOUFbQUGAJwA7QMGAMwANwAGAPEA7QMGAKgA7QMGAO8FOgQAAAAALgAAAAAA
AQABAAEAEAAFBAEAOQABAAEAAAAQAMsEJwVJAAEAAwAAARAAZAUnBV0AAwAHAAMBAACcBQAAQQAE
AAoAEQD5A4YAEQAWAYoAEQCDAI4ABgZgAJIAVoCMBZUAVoD2AJUAUCAAAAAAhgALBAYAAQDQIAAA
AACGGIQEBgABANggAAAAAIMYhAQGAAEA4CAAAAAAkwhwBJkAAQAMIQAAAACTCP4AngABABMhAAAA
AJMICgGjAAEAGyEAAAAAlgixBakAAgAiIQAAAACGGIQEBgACACohAAAAAJEYigSuAAIAAAABABoD
CQCEBAEAEQCEBAYAGQCEBAoAKQCEBBAAMQCEBBAAOQCEBBAAQQCEBBAASQCEBBAAUQCEBBAAWQCE
BBAAYQCEBBAAaQCEBAYAiQCEBAYAsQCEBBUAwQCEBAYAcQCUBSIAyQBWBScA0QDkAywA2QAQAzIA
kQBDAzYA4QAlADoAeQCEBD8A6QBxADYA8QB7AEYA+QBaAQYAAQHYBU0AyQC9BQEAcQCEBAYAkQCE
BAYACQG6AFMACQHrBVwAmQCEBGIAuQCEBAYACAAUAHwACAAYAIEAKQBzAOkALgALAMEALgATAMoA
LgAbAOkALgAjAPIALgArABsBLgAzABsBLgA7ABsBLgBDAPIALgBLACEBLgBTABsBLgBbADgBQwBj
AIEASQBzAOkAYQB7AIEAYwBrAIEAGwADAAEABAADAAAAdASyAAAAHgG3AAAAtQW8AAIABAADAAIA
BQAFAAEABgAFAAIABwAHAASAAAABAAAAmSLaBQAAAAAAAAEAAAAEAAAAAAAAAAAAAABqAGgAAAAA
ABAAAAAAAAAAAAAAAHMATAMAAAAABAAAAAAAAAAAAAAAagDtAwAAAAAQAAAAAAAAAAAAAABzAEEA
AAAAAAAAAAABAAAA1QQAAAUAAgAAAABTVF82ZjZiOTI4NmYzOTk0MGQ0OWU2M2UyNzBlNzVmNzQw
MQBnZXRfVVRGOAA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AbXNjb3JsaWIAUmVhZFRvRW5kAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAFZh
cmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZp
bGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1
cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFz
ZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUARW5jb2RpbmcAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmlu
ZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwAU1RfNmY2YjkyODZmMzk5NDBkNDllNjNlMjcwZTc1Zjc0MDEuZGxsAGdldF9JdGVt
AFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24A
U3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24AQ3VsdHVyZUluZm8AU3RyZWFt
UmVhZGVyAFRleHRSZWFkZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTVF82ZjZiOTI4NmYzOTk0MGQ0OWU2M2UyNzBlNzVmNzQwMS5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNmY2YjkyODZmMzk5NDBkNDllNjNlMjcw
ZTc1Zjc0MDEuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN5c3RlbS5UZXh0LlJl
Z3VsYXJFeHByZXNzaW9ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBPYmplY3QAZ2V0
X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLlRleHQAV3JpdGVBbGxUZXh0AFJlZ2V4AGdl
dF9Bc3NlbWJseQAAHVUAcwBlAHIAOgA6AEYAaQBsAGUAbgBhAG0AZQAABSIAIAAAAyIAAHFTAFQA
XwA2AGYANgBiADkAMgA4ADYAZgAzADkAOQA0ADAAZAA0ADkAZQA2ADMAZQAyADcAMABlADcANQBm
ADcANAAwADEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAApx/KK
2WpxTavmOWAWdSYIAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFVBgcDDg4SPQQgABJlBCAAEmkF
IAESbRwDIAAcAyAADgQAABJxBiACAQ4ScQYAAw4ODg4FAAIBDg4IAAESgIURgIkFIAASgI0HIAIB
DhKAjQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJNAwYSUQMGEhACBggDBhEUBAAAEk0E
AAASUQUAAQESUQQAABIQAwAAAQQIABJNBAgAElEECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNmY2YjkyODZmMzk5NDBkNDllNjNlMjcw
ZTc1Zjc0MDEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcA
ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAA
AAAAUEFEUEFEULQAAACwLgAAAAAAAAAAAADKLgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvC4A
AAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABAEAAAAAAAAAAAAABAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDaBZkiAAABANoFmSI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsARwAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABMAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfADYAZgA2AGIAOQAyADgANgBmADMAOQA5ADQAMABkADQAOQBlADYAMwBlADIANwAw
AGUANwA1AGYANwA0ADAAMQAAADwADgABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA4ADgANQA3AC4AMQA0ADkAOAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8ANgBmADYAYgA5ADIAOAA2AGYAMwA5ADkANAAwAGQANAA5AGUANgAzAGUAMgA3ADAAZQA3ADUA
ZgA3ADQAMAAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwA2AGYANgBiADkAMgA4ADYAZgAzADkAOQA0ADAAZAA0ADkAZQA2ADMAZQAyADcA
MABlADcANQBmADcANAAwADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8ANgBmADYAYgA5ADIAOAA2AGYAMwA5ADkANAAwAGQANAA5AGUANgAzAGUAMgA3ADAA
ZQA3ADUAZgA3ADQAMAAxAAAAQAAOAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA4ADgANQA3AC4AMQA0ADkAOAAAAEQADgABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADgAOAA1ADcALgAxADQAOQA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAADcPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Extract Error Rows to File"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{13CFB55C-B94D-447D-B1E5-0125BA43931B}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Extract Error Rows to File"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Extract Error Rows to File\Output Error Rows to CSV File"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="1033"
              name="Output Error Rows to CSV File"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">false</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Error CSV File Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Error CSV File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="UserID"
                      externalMetadataColumnId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="Age"
                      externalMetadataColumnId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[Age]" />
                    <inputColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[Email]" />
                    <inputColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="RegistrationDate"
                      externalMetadataColumnId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="LastLoginDate"
                      externalMetadataColumnId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="PurchaseTotal"
                      externalMetadataColumnId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[UserID]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[Age]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input].ExternalColumns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Retrieve Data From Error Result Set"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Object ErrorRows
    {
        get
        {
            return (Object)(ParentComponent.ReadOnlyVariables["ErrorRows"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Data.OleDb;
using System.Windows.Forms;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        // Tutorial comes from the following link:
        // https://www.timmitchell.net/post/2015/04/20/using-the-ssis-object-variable-as-a-data-flow-source/
        // Set up the DataAdapter to extract the data, and the DataTable object to capture those results
        OleDbDataAdapter da = new OleDbDataAdapter();
        DataTable dt = new DataTable();

        // Extract the data from the object variable into the table
        da.Fill(dt, Variables.ErrorRows);

        // Since we know the column metadata at design time, we simply need to iterate over each row in
        //  the DataTable, creating a new row in our Data Flow buffer for each
        foreach (DataRow dr in dt.Rows)
        {
            // Create a new, empty row in the output buffer
            Output0Buffer.AddRow();

            // Now populate the columns
            Output0Buffer.UserID = dr["UserID"].ToString();
            Output0Buffer.FullName = dr["FullName"].ToString();
            Output0Buffer.Age = dr["Age"].ToString();
            Output0Buffer.Email = dr["Email"].ToString();
            Output0Buffer.RegistrationDate = dr["RegistrationDate"].ToString();
            Output0Buffer.LastLoginDate = dr["LastLoginDate"].ToString();
            Output0Buffer.PurchaseTotal = dr["PurchaseTotal"].ToString();

        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String UserID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool UserID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FullName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FullName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Age
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Age_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Email
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Email_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RegistrationDate
    {
        set
        {
            this[4] = value;
        }
    }
    public bool RegistrationDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LastLoginDate
    {
        set
        {
            this[5] = value;
        }
    }
    public bool LastLoginDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PurchaseTotal
    {
        set
        {
            this[6] = value;
        }
    }
    public bool PurchaseTotal_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d40fefd7a9594660af4c5997c4e57032.Properties.Settings.get_Default():SC_d40fefd7a9594660af4c5997c4e57032.Properties.Sett" +
    "ings")]

namespace SC_d40fefd7a9594660af4c5997c4e57032.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d40fefd7a9594660af4c5997c4e57032.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8a27c6b1-fa6f-4e1b-b469-0091406c6e78}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d40fefd7a9594660af4c5997c4e57032</RootNamespace>
    <AssemblyName>SC_d40fefd7a9594660af4c5997c4e57032</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_d40fefd7a9594660af4c5997c4e57032" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_d40fefd7a9594660af4c5997c4e57032</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_d40fefd7a9594660af4c5997c4e57032</msb:DisplayName>
    <msb:ProjectId>{8EFE45D0-3984-41C7-88F6-206E1A52802A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_d40fefd7a9594660af4c5997c4e57032.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d40fefd7a9594660af4c5997c4e57032")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_d40fefd7a9594660af4c5997c4e57032")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d40fefd7a9594660af4c5997c4e57032.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d40fefd7a9594660af4c5997c4e57032.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d40fefd7a9594660af4c5997c4e57032.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d40fefd7a9594660af4c5997c4e57032.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d40fefd7a9594660af4c5997c4e57032.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d40fefd7a9594660af4c5997c4e57032.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFVnCmYAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAASjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPg4AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAUBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAs
OQAAAAAAAEgAAAACAAUA5CMAAFwUAAABAAAAAAAAAEA4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAMAIQEAAAEAABFzEgAACnMT
AAAKCgYCewIAAARvHgAABm8UAAAKJgZvFQAACm8WAAAKCzjUAAAAB28XAAAKdBAAAAEMAnsDAAAE
bxQAAAYCewMAAAQIcgEAAHBvGAAACm8ZAAAKbwYAAAYCewMAAAQIcg8AAHBvGAAACm8ZAAAKbwgA
AAYCewMAAAQIciEAAHBvGAAACm8ZAAAKbwoAAAYCewMAAAQIcikAAHBvGAAACm8ZAAAKbwwAAAYC
ewMAAAQIcjUAAHBvGAAACm8ZAAAKbw4AAAYCewMAAAQIclcAAHBvGAAACm8ZAAAKbxAAAAYCewMA
AAQIcnMAAHBvGAAACm8ZAAAKbxIAAAYHbxoAAAo6If///94RB3URAAABDQksBglvGwAACtwqAAAA
ARAAAAIAKQDmDwERAAAAAB4CKBcAAAYqKgIDBAUoHAAACiomAhYDKB0AAAoqWgMsCAIWKB4AAAoq
co8AAHBzHwAACnomAhcDKB0AAAoqWgMsCAIXKB4AAAoqco8AAHBzHwAACnomAhgDKB0AAAoqWgMs
CAIYKB4AAAoqco8AAHBzHwAACnomAhkDKB0AAAoqWgMsCAIZKB4AAAoqco8AAHBzHwAACnomAhoD
KB0AAAoqWgMsCAIaKB4AAAoqco8AAHBzHwAACnomAhsDKB0AAAoqWgMsCAIbKB4AAAoqco8AAHBz
HwAACnomAhwDKB0AAAoqWgMsCAIcKB4AAAoqco8AAHBzHwAACnoeAiggAAAKKh4CKCEAAAoqHgIo
IgAACip+AigjAAAKAgJzHAAABn0BAAAEAgJzHQAABn0CAAAEKgYqbgJ7AwAABCwSAnsDAAAEbxUA
AAYCFH0DAAAEKhMwBQBJAAAAAgAAERYKKy4EBpQOBHIsAQBwKCQAAAozGQIFBpoCBAaUKCUAAAoO
BHMFAAAGfQMAAAQGF1gKBgMyzgJvGwAABgJvGAAABgIoGQAABio6AigmAAAKAgN9BAAABCo6Aigm
AAAKAgN9BQAABCqCAnsFAAAEbycAAApyPgEAcG8oAAAKKCkAAApvKgAACioeAigmAAAKKq5+BgAA
BC0eclIBAHDQBwAAAigrAAAKbywAAApzLQAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4I
AAAEKh4CKC4AAAoqLnMkAAAGgAgAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAF
AGwAAACIBwAAI34AAPQHAAC4CAAAI1N0cmluZ3MAAAAArBAAAMQBAAAjVVMAcBIAABAAAAAjR1VJ
RAAAAIASAADcAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAKAAAAAgAAAAI
AAAAJQAAABgAAAAuAAAAEAAAAAIAAAAEAAAAEgAAABMAAAABAAAABgAAAAEAAAAAAO0DAQAAAAAA
BgDJAlAGBgBdA1AGBgAVAj0GDwDEBgAABgBCAhAFBgCsAhAFBgCNAhAFBgBEAxAFBgDpAhAFBgAC
AxAFBgBZAhAFBgB0ApgDCgAdAxgBDgDRAH4ABgAMBkYHDgCZCH4ABgDbAMgECgCyBRgBEgCjBRgB
CgBaBRgBCgDmBxgBBgCmB8gEBgD4AT0GBgDDBXAGBgBOBfsEFgDIAc0DFgApAs0DFgCBAeYEBgDd
AVAGDgD7BYoADgAiBX4ADgBmAX4ABgA0BcgEGgARANMFGgABANMFVwBpCAAAGgAiANMFBgA5AcgE
BgDnAMgEBgCsCBAFAAAAAF4AAAAAAAEAAQABABAA2wQAABAAAQABAAEAEACVBQAASQABAAUAAQAQ
AMgHAABVAAEAFwABABAAWQcAAFkABAAcAAEAEAAOBwAAWQAFAB0AAAAQAHcG0wZZAAYAHwAAARAA
PQfTBnEACAAjAAYAWQesAAYADgewAAYAlQW0AAEA1ge4AAEA1ge4ABEAzwS8ABEAVgHAABEAuQDE
AFAgAAAAAMYAewMGAAEAWCAAAAAAxgCGAwYAAQBgIAAAAADGAJIHBgABAKAhAAAAAIYYJgYGAAEA
qCEAAAAAhhgmBkgAAQCzIQAAAACGCGcAEAAEAL0hAAAAAIYIGgTIAAUA1CEAAAAAhggLARAABgDe
IQAAAACGCDsEyAAHAPUhAAAAAIYIyQAQAAgA/yEAAAAAhggsBMgACQAWIgAAAACGCOMDEAAKACAi
AAAAAIYInQTIAAsANyIAAAAAhgizARAADABBIgAAAACGCGgEyAANAFgiAAAAAIYIoQEQAA4AYiIA
AAAAhghPBMgADwB5IgAAAACGCLsDEAAQAIMiAAAAAIYIhATIABEAmiIAAAAAhgChCAYAEgCiIgAA
AACGAK0HBgASAKoiAAAAAIYAsAdEABIAsiIAAAAAhhgmBgYAEgDSIgAAAADGAW0HBgASANQiAAAA
AIEApQAGABIA8CIAAAAAxgBACM0AEgDSIgAAAADGAZIHBgAWAEUjAAAAAIYYJgbZABYAVCMAAAAA
hhgmBtkAFwBjIwAAAACGCIQHNwAYAIQjAAAAAIMYJgYGABgAjCMAAAAAkwi/Bd8AGAC4IwAAAACT
CD4B5AAYAL8jAAAAAJMISgHpABgAxyMAAAAAlgi8B+8AGQDOIwAAAACGGCYGBgAZANYjAAAAAJEY
LAb0ABkAAAABALgFAAACABgHAAADAGgFAAABAJIDAAABAJIDAAABAJIDAAABAJIDAAABAJIDAAAB
AJIDAAABAJIDAAABAJIDAAABAJIDAAABAJIDAAABAJIDAAABAJIDAAABAJIDAAABAJIDAAABAHMH
AAACADMGAAADAGUHAAAEAGgFAAABAOwHAAABAOwHAAABAJIDCQAmBgEAEQAmBgYAGQAmBgoAKQAm
BhAAMQAmBhAAOQAmBhAAQQAmBhAASQAmBhAAUQAmBhAAWQAmBhAAYQAmBhAAaQAmBgYAuQAmBgYA
2QAmBhUA6QAmBgYAqQB7AwYAqQCGAwYA8QAmBgYAcQAmBgYA8QAVBCYAcQB7By0AAQEYBjIAeQD2
BzcAgQC2BDsAsQCyA0AAeQBMCEQAiQCZAQYAkQAmBkgAkQC/BFIAkQCuBAEACQEmBhAAkQChCAYA
kQCtBwYAkQCwB0QAqQAmBgYAqQByAFwAqQAsB2MAsQAmBgYAqQACB2kAEQG2BG8AqQCECHYAGQFV
CHwAMQH5AIMAMQGoCIwAwQAmBpIA4QAmBgYALgALABMBLgATABwBLgAbADsBLgAjAEQBLgArAG0B
LgAzAG0BLgA7AG0BLgBDAEQBLgBLAHMBLgBTAG0BLgBbAIoBQwBjANQB4wBrANQBAQF7ANQBCQJz
ADsBKQJzADsBGwBYAAMAAQAGAA8ABwAQAAgAEgAAAGsA+AAAAB4E/AAAAA8B+AAAAD8E/AAAAM0A
+AAAADAE/AAAAOcD+AAAAKEE/AAAALcB+AAAAGwE/AAAAKUB+AAAAFME/AAAAL8D+AAAAIgE/AAA
AIgHAAEAAMMFBAEAAF4BCQEAAMAHDgEBAAYAAwABAAcABQABAAgABwABAAkACQABAAoACwABAAsA
DQABAAwADwABAA0AEQABAA4AEwABAA8AFQABABAAFwABABEAGQABABIAGwABABMAHQACAB4AHwAC
ACAAIQACACEAIwABACIAIwACACMAJQAEgAAAAQAAAAAAAAAAAAAAAAA6AAAABAAAAAAAAAAAAAAA
mgCcAAAAAAAQAAAAAAAAAAAAAACjAAIIAAAAAAQAAAAAAAAAAAAAAJoAfgAAAAAAEAAAAAAAAAAA
AAAAowAfCAAAAAAEAAAAAAAAAAAAAACaAMgEAAAAABAAAAAAAAAAAAAAAKMAcgUAAAAAAAAAAAEA
AACBBgAAAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZhbHVhdG9y
Q29udGV4dDEwMABTQ19kNDBmZWZkN2E5NTk0NjYwYWY0YzU5OTdjNGU1NzAzMgA8TW9kdWxlPgBz
ZXRfVXNlcklEAEdldE91dHB1dElEAFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLk9sZURiAG1zY29y
bGliAE1hcmtPdXRwdXRzRmluaXNoZWQAZGVmYXVsdEluc3RhbmNlAHNldF9BZ2UARGF0YVRhYmxl
AElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAHNldF9GdWxs
TmFtZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAHNldF9MYXN0TG9naW5EYXRlAHNldF9SZWdpc3Ry
YXRpb25EYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUA
UG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBzZXRf
UHVyY2hhc2VUb3RhbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAc2V0X0VtYWlsAFNDX2Q0MGZlZmQ3
YTk1OTQ2NjBhZjRjNTk5N2M0ZTU3MDMyLmRsbABGaWxsAHNldF9Vc2VySURfSXNOdWxsAHNldF9B
Z2VfSXNOdWxsAHNldF9GdWxsTmFtZV9Jc051bGwAc2V0X0xhc3RMb2dpbkRhdGVfSXNOdWxsAHNl
dF9SZWdpc3RyYXRpb25EYXRlX0lzTnVsbABzZXRfUHVyY2hhc2VUb3RhbF9Jc051bGwAc2V0X0Vt
YWlsX0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBT
Y3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3Rl
bS5SZWZsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24A
Q3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5E
VFNSdW50aW1lV3JhcABPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBl
cgBPbGVEYkRhdGFBZGFwdGVyAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9y
AE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2Q0MGZlZmQ3YTk1OTQ2NjBhZjRjNTk5N2M0ZTU3MDMy
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19kNDBmZWZk
N2E5NTk0NjYwYWY0YzU5OTdjNGU1NzAzMi5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZhcmlhYmxl
cwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MAU3lzdGVtLkNv
bGxlY3Rpb25zAENvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBnZXRfUm93cwBnZXRf
RXJyb3JSb3dzAENyZWF0ZU5ld091dHB1dFJvd3MAT2JqZWN0AFNldEVuZE9mUm93c2V0AGdldF9E
ZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRf
Q3VycmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
UGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AE1vdmVOZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2Ny
aXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQARGF0YVJvdwBBZGRS
b3cAZ2V0X0Fzc2VtYmx5AAAAAAANVQBzAGUAcgBJAEQAABFGAHUAbABsAE4AYQBtAGUAAAdBAGcA
ZQAAC0UAbQBhAGkAbAAAIVIAZQBnAGkAcwB0AHIAYQB0AGkAbwBuAEQAYQB0AGUAABtMAGEAcwB0
AEwAbwBnAGkAbgBEAGEAdABlAAAbUAB1AHIAYwBoAGEAcwBlAFQAbwB0AGEAbAAAgJtJAHMATgB1
AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8A
IABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABl
ACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUAdABwAHUAdAAgADAAABNFAHIA
cgBvAHIAUgBvAHcAcwAAcVMAQwBfAGQANAAwAGYAZQBmAGQANwBhADkANQA5ADQANgA2ADAAYQBm
ADQAYwA1ADkAOQA3AGMANABlADUANwAwADMAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAnyBtBVPvI0a0gMQIj1wkZgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQER
aQoHBBI5Ej0SQRJFBiACCBI5HAQgABJ9BCAAEj0DIAAcBCABHA4DIAAOAyAAAgkgAwESTR0IElEF
IAIBCBwDBwEIBgACCBJRDgUgAR0ICAUgABKAiQYgARKAjRwFAAASgJEGIAEcEoCVCAABEoCZEYCd
BSAAEoChByACAQ4SgKEIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEgwDBhJVAwYSYQMGEmUD
BhIgBCABAQILIAQBCB0IHRJNElEFIAEBElUEAAASYQQAABJlBQABARJlBAAAEiADAAABAygADgMo
AAIDKAAcBAgAEmEECAASZQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhy
b3dzAQgBAAIAAAAAACgBACNTQ19kNDBmZWZkN2E5NTk0NjYwYWY0YzU5OTdjNGU1NzAzMgAABQEA
AAAAFgEAEUNvcHlyaWdodCBAICAyMDI0AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcB
AFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAAAAAtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAACA5AAAAAAAAAAAAADo5AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsOQAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwBkADQAMABmAGUAZgBkADcAYQA5ADUAOQA0ADYANgAwAGEAZgA0AGMANQA5ADkANwBjADQA
ZQA1ADcAMAAzADIAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGQANAAwAGYAZQBmAGQA
NwBhADkANQA5ADQANgA2ADAAYQBmADQAYwA1ADkAOQA3AGMANABlADUANwAwADMAMgAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZAA0ADAA
ZgBlAGYAZAA3AGEAOQA1ADkANAA2ADYAMABhAGYANABjADUAOQA5ADcAYwA0AGUANQA3ADAAMwAy
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGQANAAwAGYA
ZQBmAGQANwBhADkANQA5ADQANgA2ADAAYQBmADQAYwA1ADkAOQA3AGMANABlADUANwAwADMAMgAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAATDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_d40fefd7a9594660af4c5997c4e57032</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::ErrorRows</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">00</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[UserID]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[UserID]"
                      name="UserID" />
                    <outputColumn
                      refId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[FullName]"
                      name="FullName" />
                    <outputColumn
                      refId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[Age]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[Age]"
                      name="Age" />
                    <outputColumn
                      refId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[RegistrationDate]"
                      name="RegistrationDate" />
                    <outputColumn
                      refId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[LastLoginDate]"
                      name="LastLoginDate" />
                    <outputColumn
                      refId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      lineageId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0].Columns[PurchaseTotal]"
                      name="PurchaseTotal" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Extract Error Rows to File.Paths[Output 0]"
              endId="Package\Extract Error Rows to File\Output Error Rows to CSV File.Inputs[Flat File Destination Input]"
              name="Output 0"
              startId="Package\Extract Error Rows to File\Retrieve Data From Error Result Set.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Import CSV data to Staging Table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{D0527124-D3BC-4668-B11A-4E1BA4ECF4ED}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import CSV data to Staging Table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Import CSV data to Staging Table\Add to staging table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Add to staging table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[stg].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">true</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import CSV data to Staging Table\Add to staging table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost Kore Assignmnet DB connection]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost Kore Assignmnet DB connection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].Columns[UserID Converted]"
                      cachedDataType="i4"
                      cachedName="UserID Converted"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[UserID Converted]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].Columns[FullName Converted]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName Converted"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[FullName Converted]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].Columns[Age Converted]"
                      cachedDataType="i4"
                      cachedName="Age Converted"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[Age Converted]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].Columns[Email Converted]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email Converted"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[Email Converted]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].Columns[RegistrationDate Converted]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate Converted"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[RegistrationDate Converted]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].Columns[LastLoginDate Converted]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate Converted"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[LastLoginDate Converted]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].Columns[PurchaseTotal Converted]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal Converted"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[PurchaseTotal Converted]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import CSV data to Staging Table\Add to staging table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import CSV data to Staging Table\Add to staging table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Add to staging table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import CSV data to Staging Table\Add to staging table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import CSV data to Staging Table\Convert to DB datatypes"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Convert to DB datatypes"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Inputs[Data Conversion Input].Columns[UserID Processed]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="UserID Processed"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[UserID Processed]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Inputs[Data Conversion Input].Columns[Age Processed]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Age Processed"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[Age Processed]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Inputs[Data Conversion Input].Columns[PurchaseTotal Processed]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="PurchaseTotal Processed"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[PurchaseTotal Processed]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Inputs[Data Conversion Input].Columns[Email Processed]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Email Processed"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[Email Processed]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Inputs[Data Conversion Input].Columns[RegistrationDate Processed]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="RegistrationDate Processed"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[RegistrationDate Processed]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Inputs[Data Conversion Input].Columns[LastLoginDate Processed]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="LastLoginDate Processed"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[LastLoginDate Processed]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Inputs[Data Conversion Input].Columns[FullName Processed]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="FullName Processed"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[FullName Processed]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[UserID Converted]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[UserID Converted]"
                      name="UserID Converted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import CSV data to Staging Table\Remove "null" from numeric columns.Outputs[Derived Column Output].Columns[UserID Processed]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[FullName Converted]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[FullName Converted]"
                      name="FullName Converted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import CSV data to Staging Table\Remove "null" from numeric columns.Outputs[Derived Column Output].Columns[FullName Processed]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[Age Converted]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[Age Converted]"
                      name="Age Converted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import CSV data to Staging Table\Remove "null" from numeric columns.Outputs[Derived Column Output].Columns[Age Processed]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[Email Converted]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[Email Converted]"
                      name="Email Converted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import CSV data to Staging Table\Remove "null" from numeric columns.Outputs[Derived Column Output].Columns[Email Processed]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[RegistrationDate Converted]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[RegistrationDate Converted]"
                      name="RegistrationDate Converted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import CSV data to Staging Table\Remove "null" from numeric columns.Outputs[Derived Column Output].Columns[RegistrationDate Processed]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[LastLoginDate Converted]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[LastLoginDate Converted]"
                      name="LastLoginDate Converted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import CSV data to Staging Table\Remove "null" from numeric columns.Outputs[Derived Column Output].Columns[LastLoginDate Processed]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[PurchaseTotal Converted]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="RedirectRow"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[PurchaseTotal Converted]"
                      name="PurchaseTotal Converted"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Import CSV data to Staging Table\Remove "null" from numeric columns.Outputs[Derived Column Output].Columns[PurchaseTotal Processed]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import CSV data to Staging Table\Flat File Destination"
              componentClassID="Microsoft.FlatFileDestination"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Destination"
              localeId="1033"
              name="Flat File Destination"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.String"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header">UserID,FullName,Age,Email,RegistrationDate,LastLoginDate,PurchaseTotal</property>
                <property
                  dataType="System.Boolean"
                  description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                  name="EscapeQualifier">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import CSV data to Staging Table\Flat File Destination.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Error CSV File Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Error CSV File Connection Manager]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[UserID]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Age]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      length="255"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Import CSV data to Staging Table\Import data from CSV file"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="Import data from CSV file"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">true</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Import CSV data to Staging Table\Import data from CSV file.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[CSV file connection manager]"
                  connectionManagerRefId="Package.ConnectionManagers[CSV file connection manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[UserID]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[UserID]"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[FullName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[FullName]"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[Age]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[Age]"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[Email]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[Email]"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[RegistrationDate]"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[LastLoginDate]"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[PurchaseTotal]"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[UserID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[Age]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].ExternalColumns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Remove &quot;null&quot; from numeric columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Inputs[Derived Column Input].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Inputs[Derived Column Input].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Inputs[Derived Column Input].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Inputs[Derived Column Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Inputs[Derived Column Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Inputs[Derived Column Input].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Inputs[Derived Column Input].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[LastLoginDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[UserID Processed]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[UserID Processed]"
                      name="UserID Processed"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LOWER]([TRIM](#{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[UserID]})) == "null" ? NULL(DT_WSTR,50) : #{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[UserID]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LOWER(TRIM(UserID)) == "null" ? NULL(DT_WSTR,50) : UserID</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[Age Processed]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[Age Processed]"
                      name="Age Processed"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LOWER]([TRIM](#{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[Age]})) == "null" ? NULL(DT_WSTR,50) : #{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[Age]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LOWER(TRIM(Age)) == "null" ? NULL(DT_WSTR,50) : Age</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[PurchaseTotal Processed]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[PurchaseTotal Processed]"
                      name="PurchaseTotal Processed"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LOWER]([TRIM](#{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[PurchaseTotal]})) == "null" ? NULL(DT_WSTR,50) : #{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[PurchaseTotal]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LOWER(TRIM(PurchaseTotal)) == "null" ? NULL(DT_WSTR,50) : PurchaseTotal</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[FullName Processed]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[FullName Processed]"
                      name="FullName Processed"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LOWER]([TRIM](#{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[FullName]})) == "null" ? NULL(DT_WSTR,50) : #{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[FullName]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LOWER(TRIM(FullName)) == "null" ? NULL(DT_WSTR,50) : FullName</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[Email Processed]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[Email Processed]"
                      name="Email Processed"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LOWER]([TRIM](#{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[Email]})) == "null" ? NULL(DT_WSTR,50) : #{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[Email]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LOWER(TRIM(Email)) == "null" ? NULL(DT_WSTR,50) : Email</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[RegistrationDate Processed]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[RegistrationDate Processed]"
                      name="RegistrationDate Processed"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LOWER]([TRIM](#{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[RegistrationDate]})) == "null" ? NULL(DT_WSTR,50) : #{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[RegistrationDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LOWER(TRIM(RegistrationDate)) == "null" ? NULL(DT_WSTR,50) : RegistrationDate</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[LastLoginDate Processed]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output].Columns[LastLoginDate Processed]"
                      name="LastLoginDate Processed"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[LOWER]([TRIM](#{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[LastLoginDate]})) == "null" ? NULL(DT_WSTR,50) : #{Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output].Columns[LastLoginDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">LOWER(TRIM(LastLoginDate)) == "null" ? NULL(DT_WSTR,50) : LastLoginDate</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Import CSV data to Staging Table\Sort by User ID"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort by User ID"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Import CSV data to Staging Table\Sort by User ID.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Inputs[Sort Input].Columns[UserID Converted]"
                      cachedDataType="i4"
                      cachedName="UserID Converted"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[UserID Converted]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Inputs[Sort Input].Columns[FullName Converted]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName Converted"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[FullName Converted]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Inputs[Sort Input].Columns[Age Converted]"
                      cachedDataType="i4"
                      cachedName="Age Converted"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[Age Converted]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Inputs[Sort Input].Columns[Email Converted]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email Converted"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[Email Converted]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Inputs[Sort Input].Columns[RegistrationDate Converted]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate Converted"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[RegistrationDate Converted]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Inputs[Sort Input].Columns[LastLoginDate Converted]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate Converted"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[LastLoginDate Converted]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Inputs[Sort Input].Columns[PurchaseTotal Converted]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal Converted"
                      lineageId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[PurchaseTotal Converted]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[UserID Converted]"
                      dataType="i4"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[UserID Converted]"
                      name="UserID Converted"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[UserID Converted]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[FullName Converted]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[FullName Converted]"
                      name="FullName Converted">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[FullName Converted]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[Age Converted]"
                      dataType="i4"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[Age Converted]"
                      name="Age Converted">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[Age Converted]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[Email Converted]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[Email Converted]"
                      name="Email Converted">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[Email Converted]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[RegistrationDate Converted]"
                      dataType="dbDate"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[RegistrationDate Converted]"
                      name="RegistrationDate Converted">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[RegistrationDate Converted]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[LastLoginDate Converted]"
                      dataType="dbDate"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[LastLoginDate Converted]"
                      name="LastLoginDate Converted">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[LastLoginDate Converted]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[PurchaseTotal Converted]"
                      dataType="r8"
                      lineageId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output].Columns[PurchaseTotal Converted]"
                      name="PurchaseTotal Converted">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output].Columns[PurchaseTotal Converted]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Import CSV data to Staging Table.Paths[Data Conversion Error Output]"
              endId="Package\Import CSV data to Staging Table\Flat File Destination.Inputs[Flat File Destination Input]"
              name="Data Conversion Error Output"
              startId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Error Output]" />
            <path
              refId="Package\Import CSV data to Staging Table.Paths[Data Conversion Output]"
              endId="Package\Import CSV data to Staging Table\Sort by User ID.Inputs[Sort Input]"
              name="Data Conversion Output"
              startId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Import CSV data to Staging Table.Paths[Derived Column Output]"
              endId="Package\Import CSV data to Staging Table\Convert to DB datatypes.Inputs[Data Conversion Input]"
              name="Derived Column Output"
              startId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Import CSV data to Staging Table.Paths[Flat File Source Output]"
              endId="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns.Inputs[Derived Column Input]"
              name="Flat File Source Output"
              startId="Package\Import CSV data to Staging Table\Import data from CSV file.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Import CSV data to Staging Table.Paths[Sort Output]"
              endId="Package\Import CSV data to Staging Table\Add to staging table.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\Import CSV data to Staging Table\Sort by User ID.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Incremental load to Prod"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{0D91DFFC-E17D-41CB-8D1F-5CADB8DBA880}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Incremental load to Prod"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Incremental load to Prod\Lookup by User ID"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup by User ID"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [prod].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [prod].[Users]) [refTable]
where [refTable].[UserID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="UserID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FullName" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Age" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Email" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RegistrationDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="LastLoginDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="PurchaseTotal" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RecordLastUpdated" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[UserID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Incremental load to Prod\Lookup by User ID.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost Kore Assignmnet DB connection]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost Kore Assignmnet DB connection]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Incremental load to Prod\Lookup by User ID.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Incremental load to Prod\Lookup by User ID.Inputs[Lookup Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[UserID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">UserID</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Incremental load to Prod\Lookup by User ID.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Incremental load to Prod\Lookup by User ID.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Incremental load to Prod\Lookup by User ID.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Incremental load to Prod\Lookup by User ID.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Incremental load to Prod\Lookup by User ID.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Incremental load to Prod\Lookup by User ID.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Incremental load to Prod\Lookup by User ID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Incremental load to Prod\Lookup by User ID.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Lookup by User ID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Incremental load to Prod\Lookup by User ID.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Incremental load to Prod\Staging Table"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Staging Table"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[stg].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Incremental load to Prod\Staging Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost Kore Assignmnet DB connection]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost Kore Assignmnet DB connection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[StgID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[StgID]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[StgID]"
                      name="StgID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[UserID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[UserID]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[FullName]"
                      length="255"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[Age]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[Age]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                      length="255"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[StgID]"
                      dataType="i4"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[StgID]"
                      name="StgID" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[UserID]"
                      dataType="i4"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[UserID]"
                      name="UserID" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[FullName]"
                      name="FullName" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[Age]"
                      dataType="i4"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[Age]"
                      name="Age" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[RegistrationDate]"
                      name="RegistrationDate" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[LastLoginDate]"
                      name="LastLoginDate" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Incremental load to Prod\Update Existing Rows in Prod"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Existing Rows in Prod"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE prod.Users
SET FullName= IsNull(?, FullName),
Age = ?,
Email = IsNull(?, Email),
RegistrationDate = IsNull(?, RegistrationDate),
LastLoginDate = IsNull(?, LastLoginDate),
PurchaseTotal = ?,
RecordLastUpdated = GETDATE()
WHERE UserID =?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost Kore Assignmnet DB connection]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost Kore Assignmnet DB connection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      externalMetadataColumnId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      externalMetadataColumnId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      externalMetadataColumnId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      externalMetadataColumnId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      externalMetadataColumnId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[UserID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="4000"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="i4"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="wstr"
                      length="4000"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="dbDate"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="dbDate"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="r8"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="i4"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Incremental load to Prod\Update Existing Rows in Prod.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Update Existing Rows in Prod.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Incremental load to Prod\Update Existing Rows in Prod.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Incremental load to Prod\Upload to Production Table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Upload to Production Table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[prod].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Incremental load to Prod\Upload to Production Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[localhost Kore Assignmnet DB connection]"
                  connectionManagerRefId="Package.ConnectionManagers[localhost Kore Assignmnet DB connection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      externalMetadataColumnId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      externalMetadataColumnId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      externalMetadataColumnId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      externalMetadataColumnId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      externalMetadataColumnId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                    <externalMetadataColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input].ExternalColumns[RecordLastUpdated]"
                      dataType="dbTimeStamp"
                      name="RecordLastUpdated" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Incremental load to Prod\Upload to Production Table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Incremental load to Prod\Upload to Production Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Incremental load to Prod\Upload to Production Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Incremental load to Prod\Upload to Production Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Incremental load to Prod.Paths[Lookup Match Output]"
              endId="Package\Incremental load to Prod\Update Existing Rows in Prod.Inputs[OLE DB Command Input]"
              name="Lookup Match Output"
              startId="Package\Incremental load to Prod\Lookup by User ID.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Incremental load to Prod.Paths[Lookup No Match Output]"
              endId="Package\Incremental load to Prod\Upload to Production Table.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Incremental load to Prod\Lookup by User ID.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Incremental load to Prod.Paths[OLE DB Source Output]"
              endId="Package\Incremental load to Prod\Lookup by User ID.Inputs[Lookup Input]"
              name="OLE DB Source Output"
              startId="Package\Incremental load to Prod\Staging Table.Outputs[OLE DB Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Isolate Error Rows"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B01F5FA1-8C5C-4189-AA58-5430F801F91A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Isolate Error Rows"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D496B891-9896-453D-8C25-8D9FBA045AFB}"
          SQLTask:SqlStatementSource="EXEC dbo.extract_error_rows"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ErrorRows" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Remove Duplicates"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B42D48ED-1AF5-415B-B021-5627267B627C}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Remove Duplicates"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D496B891-9896-453D-8C25-8D9FBA045AFB}"
          SQLTask:SqlStatementSource="EXEC dbo.remove_duplicates_from_staging" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncating Staging Table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B07D3294-7C3A-4975-A2A7-667D8B4D54BA}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncating Staging Table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D496B891-9896-453D-8C25-8D9FBA045AFB}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE stg.Users" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{E624CC63-9791-46D0-ACA4-526F429AB0A2}"
      DTS:From="Package\Clean csv file to remove trailing spaces after text qualifier"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Truncating Staging Table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{6B71FF17-899A-4570-895F-356AF561956E}"
      DTS:From="Package\Truncating Staging Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Import CSV data to Staging Table" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{91E548C9-3E13-418C-8C77-76C518023AC4}"
      DTS:From="Package\Import CSV data to Staging Table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Remove Duplicates" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{DFFBCB9C-EB26-4A4D-A7A0-6592D1F019A6}"
      DTS:From="Package\Remove Duplicates"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Isolate Error Rows" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{02B5C85F-199B-4D69-A544-332279BA3964}"
      DTS:From="Package\Isolate Error Rows"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Incremental load to Prod" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{28C947A0-7C00-46D2-AB2A-5880FB3A0F2A}"
      DTS:From="Package\Isolate Error Rows"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Extract Error Rows to File" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="357,42"
          Id="Package\Clean csv file to remove trailing spaces after text qualifier"
          TopLeft="478,45" />
        <NodeLayout
          Size="204,42"
          Id="Package\Extract Error Rows to File"
          TopLeft="319,519" />
        <NodeLayout
          Size="243,42"
          Id="Package\Import CSV data to Staging Table"
          TopLeft="540,292" />
        <NodeLayout
          Size="199,42"
          Id="Package\Incremental load to Prod"
          TopLeft="796,527" />
        <NodeLayout
          Size="169,42"
          Id="Package\Isolate Error Rows"
          TopLeft="570,443" />
        <NodeLayout
          Size="174,42"
          Id="Package\Remove Duplicates"
          TopLeft="566,364" />
        <NodeLayout
          Size="202,42"
          Id="Package\Truncating Staging Table"
          TopLeft="553,220" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="655.25,87">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,133"
              Start="0,0"
              End="0,125.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,125.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="657.75,262">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="661.5,334">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8.5,30"
              Start="0,0"
              End="-8.5,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11"
                    Point2="0,15"
                    Point3="-4,15" />
                  <mssgle:LineSegment
                    End="-4.5,15" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.5,15"
                    Point2="-8.5,15"
                    Point3="-8.5,19" />
                  <mssgle:LineSegment
                    End="-8.5,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="653.75,406">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37"
              Start="0,0"
              End="0,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="681.333333333333,485">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="214.166666666667,42"
              Start="0,0"
              End="214.166666666667,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.0363423212192" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.0363423212192"
                    Point2="0,17.0363423212192"
                    Point3="4,17.0363423212192" />
                  <mssgle:LineSegment
                    End="210.166666666667,17.0363423212192" />
                  <mssgle:CubicBezierSegment
                    Point1="210.166666666667,17.0363423212192"
                    Point2="214.166666666667,17.0363423212192"
                    Point3="214.166666666667,21.0363423212192" />
                  <mssgle:LineSegment
                    End="214.166666666667,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="627.666666666667,485">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-206.666666666667,34"
              Start="0,0"
              End="-206.666666666667,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.79132473622508" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.79132473622508"
                    Point2="0,13.7913247362251"
                    Point3="-4,13.7913247362251" />
                  <mssgle:LineSegment
                    End="-202.666666666667,13.7913247362251" />
                  <mssgle:CubicBezierSegment
                    Point1="-202.666666666667,13.7913247362251"
                    Point2="-206.666666666667,13.7913247362251"
                    Point3="-206.666666666667,17.7913247362251" />
                  <mssgle:LineSegment
                    End="-206.666666666667,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="When copying the csv data into a file, I noticed that some rows had spaces at the end of the line which causes the &#xA;flat file connection manager to not work properly when setting &quot; as a text qualifier in the flat file connection manager. &#xA;&#xA;Was not sure whether this was intentional, but instead of manually removing the problematic spaces, I created a script to remove the &#xA;problematic spaces programmatically.  Manually removing would have been sufficient for this 30 row csv file, but would not be reasonable in&#xA;production"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="773,120"
          Id="20bd868c-5b1c-44dd-852b-42511982edd0"
          TopLeft="680,90" />
        <AnnotationLayout
          Text="Clean up the staging table using a stored procedures. Remove duplicates based on UserID&#xA;&#xA;Redirect error rows based on invalid email, null email or null PurchaseTotal. "
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="505,72"
          Id="d3924d4b-6b42-4cee-9132-8262fb705d17"
          TopLeft="747,370" />
        <AnnotationLayout
          Text="Send error rows here"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="140,40"
          Id="28d1a9ca-dab0-40cb-bca1-9d0c168d86dd"
          TopLeft="440,469" />
        <AnnotationLayout
          Text="Send good rows here"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="142,40"
          Id="49de41e0-e8fc-4e35-ae2f-c5490117bcb5"
          TopLeft="730,472" />
        <AnnotationLayout
          Text="Reset staging table"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="130,40"
          Id="4bdf322a-903f-4f4a-b731-6f0918113e86"
          TopLeft="760,224" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Extract Error Rows to File">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="228,42"
          Id="Package\Extract Error Rows to File\Output Error Rows to CSV File"
          TopLeft="401,306" />
        <NodeLayout
          Size="256,42"
          Id="Package\Extract Error Rows to File\Retrieve Data From Error Result Set"
          TopLeft="391,100" />
        <EdgeLayout
          Id="Package\Extract Error Rows to File.Paths[Output 0]"
          TopLeft="517,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,164"
              Start="0,0"
              End="0,156.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,156.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Retrieve error rows from our clean staging table stored procedure. Append the rows onto the error.csv file."
          ParentId="Package\Extract Error Rows to File"
          FontInfo="{assembly:Null}"
          Size="591,40"
          Id="230982cf-0385-4513-acaf-06026becd5b8"
          TopLeft="647,102" />
        <AnnotationLayout
          Text="The csv file at this stage of the task has header values set for us.&#xA;Append remaining error rows to the end."
          ParentId="Package\Extract Error Rows to File"
          FontInfo="{assembly:Null}"
          Size="366,56"
          Id="e9655f0d-631d-4dfb-bd4b-8ce936ce662d"
          TopLeft="622,299" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Import CSV data to Staging Table">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="259,42"
          Id="Package\Import CSV data to Staging Table\Convert to DB datatypes"
          TopLeft="23.4,286.5" />
        <NodeLayout
          Size="259,42"
          Id="Package\Import CSV data to Staging Table\Remove &quot;null&quot; from numeric columns"
          TopLeft="23.4,183.5" />
        <NodeLayout
          Size="259,42"
          Id="Package\Import CSV data to Staging Table\Import data from CSV file"
          TopLeft="21.4,5.5" />
        <NodeLayout
          Size="259,42"
          Id="Package\Import CSV data to Staging Table\Add to staging table"
          TopLeft="25.4,575.5" />
        <NodeLayout
          Size="259,42"
          Id="Package\Import CSV data to Staging Table\Sort by User ID"
          TopLeft="23.4,426" />
        <NodeLayout
          Size="176,42"
          Id="Package\Import CSV data to Staging Table\Flat File Destination"
          TopLeft="534,290" />
        <EdgeLayout
          Id="Package\Import CSV data to Staging Table.Paths[Sort Output]"
          TopLeft="153.9,468">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,107.5"
              Start="0,0"
              End="0,100">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,100" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import CSV data to Staging Table.Paths[Flat File Source Output]"
          TopLeft="151.9,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,136"
              Start="0,0"
              End="0,128.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,128.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import CSV data to Staging Table.Paths[Derived Column Output]"
          TopLeft="152.9,225.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61"
              Start="0,0"
              End="0,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import CSV data to Staging Table.Paths[Data Conversion Output]"
          TopLeft="152.9,328.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,97.5"
              Start="0,0"
              End="0,90">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,90" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import CSV data to Staging Table.Paths[Data Conversion Error Output]"
          TopLeft="282.4,309.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="251.6,0"
              Start="0,0"
              End="244.1,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="244.1,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="55.96361328125,5,132.1727734375,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Need to convert the data from the flat file source into agreeable data types for the staging table.&#xA;Right-clicking &quot;Staging Table Destination&quot;, clicking &quot;show advanced editor&quot; and going into &quot;input and output &#xA;properties&quot; gives us the table's datatypes in SSIS terms. &#xA;&#xA;If converting data types gives us error, we assume a faulty row and remove it/redirect it to the error csv."
          ParentId="Package\Import CSV data to Staging Table"
          FontInfo="{assembly:Null}"
          Size="606,104"
          Id="bc4e26b0-3bae-4527-8136-6eb8ccbfc10a"
          TopLeft="161.5,331.5" />
        <AnnotationLayout
          Text="Some columns have values: &quot;null&quot;. For some columns, this is ok and we can remove it later. &#xA;For userID, age, and PurchaseTotal, we cannot convert &quot;null&quot; into a numeric value so we set them to NULL.&#xA;Non &quot;null&quot; values are unchanged."
          ParentId="Package\Import CSV data to Staging Table"
          FontInfo="{assembly:Null}"
          Size="589,72"
          Id="3ba413e3-6026-4445-b0f0-c85c55086525"
          TopLeft="285,27.4999999999999" />
        <AnnotationLayout
          Text="With or without any error rows, we reset the error.csv &#xA;for this file and add the headers in."
          ParentId="Package\Import CSV data to Staging Table"
          FontInfo="{assembly:Null}"
          Size="313,56"
          Id="98573f8a-53bb-4d04-bae6-cb5712c46a9b"
          TopLeft="496,245" />
        <AnnotationLayout
          Text="Looks nicer when sorted"
          ParentId="Package\Import CSV data to Staging Table"
          FontInfo="{assembly:Null}"
          Size="158,40"
          Id="388b1631-8608-4546-8261-ba6d28fa9bcf"
          TopLeft="165,472" />
        <AnnotationLayout
          Text="Replace the word &quot;null&quot; with an actual NULL value."
          ParentId="Package\Import CSV data to Staging Table"
          FontInfo="{assembly:Null}"
          Size="295,40"
          Id="a80f8913-a8aa-4aa8-83f7-c1bc364718a4"
          TopLeft="287,180" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import CSV data to Staging Table\Add to staging table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Incremental load to Prod">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="212,42"
          Id="Package\Incremental load to Prod\Upload to Production Table"
          TopLeft="38,336" />
        <NodeLayout
          Size="147,42"
          Id="Package\Incremental load to Prod\Staging Table"
          TopLeft="65.5,65.5" />
        <NodeLayout
          Size="170,42"
          Id="Package\Incremental load to Prod\Lookup by User ID"
          TopLeft="81,185" />
        <NodeLayout
          Size="224,42"
          Id="Package\Incremental load to Prod\Update Existing Rows in Prod"
          TopLeft="335,341" />
        <EdgeLayout
          Id="Package\Incremental load to Prod.Paths[OLE DB Source Output]"
          TopLeft="139,107.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="27,77.5"
              Start="0,0"
              End="27,70">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.75"
                    Point2="0,38.75"
                    Point3="4,38.75" />
                  <mssgle:LineSegment
                    End="23,38.75" />
                  <mssgle:CubicBezierSegment
                    Point1="23,38.75"
                    Point2="27,38.75"
                    Point3="27,42.75" />
                  <mssgle:LineSegment
                    End="27,70" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Incremental load to Prod.Paths[Lookup No Match Output]"
          TopLeft="141.5,227">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,109"
              Start="0,0"
              End="0,101.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,101.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,44.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Incremental load to Prod.Paths[Lookup Match Output]"
          TopLeft="193,227">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="254,114"
              Start="0,0"
              End="254,106.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.2377622377622" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.2377622377622"
                    Point2="0,46.2377622377622"
                    Point3="4,46.2377622377622" />
                  <mssgle:LineSegment
                    End="250,46.2377622377622" />
                  <mssgle:CubicBezierSegment
                    Point1="250,46.2377622377622"
                    Point2="254,46.2377622377622"
                    Point3="254,50.2377622377622" />
                  <mssgle:LineSegment
                    End="254,106.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="78.80861328125,51.2377622377622,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Using &quot;UserID&quot;, we can split the data flow into two parts. If theres no UserId in the produciton table, we add the new row in.&#xA;If we found the UserId, we know that we need to update the table with the new data. "
          ParentId="Package\Incremental load to Prod"
          FontInfo="{assembly:Null}"
          Size="681,56"
          Id="e7a8ce32-3498-44ad-aae9-690c2c5453ae"
          TopLeft="285,191" />
        <AnnotationLayout
          Text="For updating the data, if theres a null value in the new data coming in, use previous value already in prod table for&#xA;name, registration date, last login, and email. "
          ParentId="Package\Incremental load to Prod"
          FontInfo="{assembly:Null}"
          Size="632,56"
          Id="e9a52478-1163-4e84-b397-1517a00dc32a"
          TopLeft="590,339" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Incremental load to Prod\Upload to Production Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Incremental load to Prod\Staging Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Incremental load to Prod\Lookup by User ID">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[prod].[Users]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>